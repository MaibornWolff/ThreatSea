name: CI

on:
  push:
    branches:
      - main
      - next
      - "v[0-9]+.[0-9]+.x"
    tags:
      - "v*"
  pull_request:
    branches:
      - "**"

env:
  TURBO_TELEMETRY_DISABLED: 1
  NODE_ENV: production

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Repository
        uses: ./.github/actions/repository-setup
      - name: Run format check
        run: pnpm format:check
      - name: Run lint
        run: pnpm lint

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Repository
        uses: ./.github/actions/repository-setup
      - name: Build backend
        run: pnpm build --filter="..../apps/backend"
      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-dist
          path: apps/backend/dist/

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: build-backend
    services:
      postgres:
        image: postgres:17.6-alpine
        env:
          POSTGRES_DB: threatsea
          POSTGRES_USER: user
          POSTGRES_PASSWORD: user
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      JWT_SECRET: test-secret
      EXPRESS_SESSION_SECRET: test-session-secret
      PASSPORT_STRATEGY: fixed
      ORIGIN_APP: http://localhost:3000
      ORIGIN_BACKEND: http://localhost:8000
      DATABASE_USER: user
      DATABASE_PASSWORD: user
      DATABASE_NAME: threatsea
      DATABASE_HOST: localhost
      DATABASE_TLS: disabled
      COOKIES_SECURE_OPTION: disabled
      LOG_LEVEL: 0
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Repository
        uses: ./.github/actions/repository-setup
      - name: Test backend
        run: pnpm -r --filter="..../apps/backend" test:ci
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-test-results
          path: |
            apps/backend/junit.xml
            apps/backend/coverage/

  build-backend-container:
    name: Build Backend Container
    runs-on: ubuntu-latest
    needs: test-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: rlespinasse/github-slug-action@v5
      - name: Build Backend Container Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/backend/Dockerfile
          push: false
          tags: threatsea-backend:${{ env.GITHUB_REF_SLUG }}

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Repository
        uses: ./.github/actions/repository-setup
      - name: Build Frontend
        run: pnpm build --filter="..../apps/frontend"
      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: apps/frontend/build/

  build-frontend-container:
    name: Build Frontend Container
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: rlespinasse/github-slug-action@v5
      - name: Build Frontend Container Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/frontend/Dockerfile
          push: false
          tags: threatsea-frontend:${{ env.GITHUB_REF_SLUG }}
